--// Wait Game Loaded \\
while true do
    if game:IsLoaded() then wait(1) break; end
    wait(.005)
end

if identifyexecutor then
    print("Hello "..identifyexecutor().." User!")
end

--// esp library \\


--// Material Lua library
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/MaterialLua/master/Module.lua"))()
local w = library.Load({
    Title = "Nen Fighting Simulator",
    Style = 1,
    SizeX = 450,
    SizeY = 355,
    Theme = "Dark"
})

--// service \\
local Players = game:GetService("Players")
local lp = Players.LocalPlayer
local chr = lp.Character
local camera = game:GetService('Workspace').CurrentCamera
getgenv().En_Range = nil;getgenv().En_Color = Color3.fromRGB(255,255,0);getgenv().rainbow_en = false;

--// script
do
    getgenv().Strength = false;getgenv().Duragility = false;getgenv().Agility = false;getgenv().Nen = false;
    local main = w.New({Title = "Main"})
    main.Button({Text = "Automation"})
    main.Toggle({Text = "Train Strength", Callback = function(x) getgenv().Strength = x end, Enabled = false})
    main.Toggle({Text = "Train Duragility", Callback = function(x) getgenv().Duragility = x end, Enabled = false})
    main.Toggle({Text = "Train Agility", Callback = function(x) getgenv().Agility = x end, Enabled = false})
    main.Toggle({Text = "Train Nen", Callback = function(x) getgenv().Nen = x end, Enabled = false})
    spawn(function()
        local train_remote=game:GetService("ReplicatedStorage").Remotes.train;
        while true do
            if getgenv().Strength == true then
                train_remote:FireServer("str")
            end
            if getgenv().Duragility == true then
                train_remote:FireServer("dur")
            end
            if getgenv().Agility == true then
                train_remote:FireServer("agi")
            end
            if getgenv().Nen == true then
                train_remote:FireServer("nen")
            end

            chr.Humanoid.WalkSpeed = getgenv().ws
            chr.Humanoid.JumpPower= getgenv().jp
            wait(.05)
        end
    end)

    local zoneTable={};
    for i,v in ipairs(workspace["Zones"]:GetChildren()) do
        if v:IsA("Part") and v:FindFirstChildOfClass("BillboardGui") then
            table.insert(zoneTable, v.Name)
        end
    end
    main.Dropdown({
        Text = "Teleport to Zone",
        Callback = function(x)
            for i,v in ipairs(workspace["Zones"]:GetChildren()) do
                if v:IsA("Part") and v:FindFirstChildOfClass("BillboardGui") and tostring(v.Name) == tostring(x) then
                    local cf = v.CFrame * CFrame.new(0,10,0)
                    chr.HumanoidRootPart.CFrame = cf
                end
            end
        end,
        Options = {unpack(zoneTable)},
    })
    main.Dropdown({
        Text = "Teleport to Area",
        Callback = function(x)
            if x == "Whale Islands" then
                for i,area in ipairs(workspace:GetChildren()) do
                    if area:IsA("Folder") and area.Name == "Whale" then
                        for _,v in ipairs(area:GetDescendants()) do
                            if v:IsA("Part") and tostring(v.Name) == "Ging" and v:FindFirstChild("ProximityPrompt") then
                                local cf = v.CFrame * CFrame.new(0,1,10)
                                chr.HumanoidRootPart.CFrame = cf
                            end
                        end
                    end
                end
            elseif x == "Yorknew city" then
                for i,area in ipairs(workspace:GetChildren()) do
                    if area:IsA("Folder") and area.Name == "Yorknew" then
                        for _,v in ipairs(area:GetDescendants()) do
                            if v:IsA("Part") and tostring(v.Name) == "Gon" and v:FindFirstChild("ProximityPrompt") then
                                local cf = v.CFrame * CFrame.new(0,1,10)
                                chr.HumanoidRootPart.CFrame = cf
                            end
                        end
                    end
                end
            elseif x == "Hunter Islands" then
                for i,area in ipairs(workspace:GetChildren()) do
                    if area:IsA("Folder") and area.Name == "Exam Islands" then
                        for _,v in ipairs(area:GetDescendants()) do
                            if v:IsA("Part") and tostring(v.Name) == "HunterIslands" and v:FindFirstChild("ProximityPrompt") then
                                local cf = v.CFrame * CFrame.new(0,1,10)
                                chr.HumanoidRootPart.CFrame = cf
                            end
                        end
                    end
                end
            end
        end,
        Options = {"Whale Islands","Yorknew city","Hunter Islands"},
    })
    main.Dropdown({
        Text = "Talk to NPC",
        Callback = function(x)
            for i,area in ipairs(workspace:GetChildren()) do
                if area:IsA("Folder") then
                    for _,v in pairs(area:GetDescendants()) do
                        if v:IsA("Part") and tostring(v.Name) == tostring(x) and v:FindFirstChild("ProximityPrompt") then
                            if v.CanCollide == true then
                                v.CanCollide = false;
                            end
                            wait(.1)
                            local cf = v.CFrame * CFrame.new(0,0,3)
                            chr.HumanoidRootPart.CFrame = cf
                            wait(1)
                            if fireproximityprompt then
                                fireproximityprompt(v.ProximityPrompt)
                            else
                                warn("Unsupport function: fireproximityprompt")
                            end
                            wait(.5)
                            v.CanCollide = true;
                        end
                    end
                end
            end
        end,
        Options = {"Ging","Gon","Killua","Chains","ConsoleFF"},
    })
end

do
    getgenv().ws = tonumber(chr.Humanoid.WalkSpeed);getgenv().jp = tonumber(chr.Humanoid.JumpPower);
    local playerTab = w.New({Title = "Players"})

    playerTab.Button({Text = "Local Player"})
    playerTab.Slider({Text = "Walk Speed", Callback = function(p) getgenv().ws = p end, Min = 0,Max = 500,Def = tonumber(chr.Humanoid.WalkSpeed)})
    playerTab.Slider({Text = "Jump Power", Callback = function(p) getgenv().jp = p end, Min = 0,Max = 500,Def = tonumber(chr.Humanoid.JumpPower)})

    playerTab.TextField({Text = "Set En range ( number only )", Type = "Default",Callback = function(x)
        getgenv().En_Range = x
    end})
    playerTab.ColorPicker({
        Text = "Set En color",
        Default = Color3.fromRGB(255,255,0),
        Callback = function(x)
            getgenv().En_Color = x;
        end
    })
    playerTab.Toggle({
        Text = "Make En rainbow",
        Callback = function(x)
            getgenv().rainbow_en = x;
        end,
        Enabled = false
    })

    local Selected;
    local playerList = {};
    for i,v in pairs(Players:GetPlayers()) do
        if v ~= nil --[[and v ~= lp]] then
            if v.DisplayName then
                table.insert(playerList,v.DisplayName)
            elseif v.Name then
                table.insert(playerList, v.Name)
            end
        end
    end
    Players.PlayerAdded:Connect(function(player)
        if player ~= nil --[[and player ~= lp]] then
            if player.DisplayName then
                table.insert(playerList, player.DisplayName)
            elseif player.Name then
                table.insert(playerList, player.Name)
            end
        end
    end)
    Players.PlayerRemoving:Connect(function(player)
        if player.DisplayName then
            if table.find(playerList, player.DisplayName) then
                table.remove(playerList, table.find(playerList, player.DisplayName))
            end
        elseif player.Name then
            if table.find(playerList, player.Name) then
                table.remove(playerList, table.find(playerList, player.Name))
            end
        end
    end)

    local plrdrop = playerTab.Dropdown({
        Text = "Select Player",
        Callback = function(x)
            Selected = x
        end,
        Options = {unpack(playerList)},
    })
    playerTab.Button({Text = "Refresh",Callback = function()
        plrdrop:SetOptions({unpack(playerList)})
    end})
    playerTab.Toggle({Text = "Spectate", Callback = function(x)
        if x then
            local plr = nil;
            for i,z in pairs(Players:GetPlayers()) do
                if z ~= nil and z.DisplayName == Selected or z.Name == Selected then
                    plr = z
                end
            end
            if plr and plr.Character and plr.Character:FindFirstChild("Humanoid") then
                camera.CameraSubject = plr.Character.Humanoid
            end
        else
            if chr and chr:FindFirstChild("Humanoid") then
                camera.CameraSubject = chr.Humanoid
            end
        end
    end, Enabled = false})
    playerTab.Button({Text = "Teleport to Selected Player", Callback = function()
        local plr = nil;
        for i,z in pairs(Players:GetPlayers()) do
            if z ~= nil and z.DisplayName == Selected or z.Name == Selected then
                plr = z
            end
            if plr and plr.Character and plr.Character.HumanoidRootPart then
                if chr:FindFirstChild('HumanoidRootPart') then
                    local cf = plr.Character.HumanoidRootPart.CFrame * CFrame.new(0,1,3)
                    chr.HumanoidRootPart.CFrame = cf
                end
            end
        end
    end})
end

do
    -- local visual = w.New({Title = "Visual"})
end

do
    local other = w.New({Title = "Other"})
    other.Button({Text = "Misc"})
    other.Button({Text = "Remove nametag", Callback = function()
        if chr and chr:FindFirstChild("HumanoidRootPart") ~= nil then
            for i,v in ipairs(chr.HumanoidRootPart:GetDescendants()) do
                if v:IsA("TextLabel") and v.Name == "DisplayName" then
                    v:Destroy()
                end
            end
        end
    end})
    other.Button({Text = "Remove ranktag", Callback = function()
        if chr and chr:FindFirstChild("HumanoidRootPart") ~= nil then
            for i,v in ipairs(chr.HumanoidRootPart:GetDescendants()) do
                if v:IsA("Frame") and v.Name == "RankFrame" then
                    v:Destroy()
                end
            end
        end
    end})
    other.Button({Text = "Remove reptag", Callback = function()
        if chr and chr:FindFirstChild("HumanoidRootPart") ~= nil then
            for i,v in ipairs(chr.HumanoidRootPart:GetDescendants()) do
                if v:IsA("TextLabel") and v.Name == "Reputation" then
                    v:Destroy()
                end
            end
        end
    end})
    other.Button({Text = "Invisible [R15]", Callback = function()
        -- remove all tag
        if chr:FindFirstChild("HumanoidRootPart") then
            for i,v in ipairs(chr.HumanoidRootPart:GetDescendants()) do
                if v:IsA("TextLabel") and v.Name == "DisplayName" then
                    v:Destroy()
                end
                if v:IsA("TextLabel") and v.Name == "Reputation" then
                    v:Destroy()
                end
                if v:IsA("Frame") and v.Name == "RankFrame" then
                    v:Destroy()
                end
            end
        end

        -- fully invisible form https://v3rmillion.net/showthread.php?tid=1177287
        local newroot = chr:FindFirstChild("LowerTorso").Root:Clone();
        local humanroot = chr.HumanoidRootPart;
        local oldsix = humanroot.CFrame;
        humanroot.Parent = workspace;
        chr.PrimaryPart = humanroot;
        chr:MoveTo(Vector3.new(oldsix.X,9e9,oldsix.Y));
        humanroot.Parent = chr;
        task.wait(.6)
        newroot.Parent = humanroot;
        humanroot.CFrame = oldsix;
    end})
    other.Button({Text = "Anti Afk", Callback = function()
        -- code form DekuDimz
        if getconnections then
            for _, v in next, getconnections(lp.Idled) do
                v:Disable()
            end
        end
        if not getconnections then
            lp.Idled:Connect(function()
                game:GetService("VirtualUser"):ClickButton2(Vector2.new())
            end)
        end
    end})
end

do
    local Credit = w.New({Title = "Credit"})
    Credit.Button({Text = "Scripting: Ghost-Ducky#7698"})
    Credit.Button({Text = "UI: Material Lua"})
    Credit.Button({Text = "Copy Discord Invite", Callback = function() pcall(function() setclipboard("https://discord.gg/TFUeFEESVv") end) end})
end

--// bypass some stuff
if lp.PlayerScripts:FindFirstChild("AgilityUpdater") then lp.PlayerScripts:FindFirstChild("AgilityUpdater"):Destroy() end

--// En Stuff
game:GetService("RunService").RenderStepped:Connect(function()
    local en = get_EN()
    if en ~= nil then
        if getgenv().En_Range ~= nil then
            local range = Vector3.new(getgenv().En_Range,getgenv().En_Range,getgenv().En_Range)
            en.Size = range
        end

        if not getgenv().rainbow_en then
            en.Color = getgenv().En_Color;
        end

        if getgenv().rainbow_en == true then
            en.Color = Color3.fromHSV(tick() % 5 / 5, 1,1);
        end
    end
end)

function get_EN()
    if workspace:FindFirstChild("Hatsu") then
        for i,z in ipairs(workspace["Hatsu"]:GetDescendants()) do
            if z:IsA("WeldConstraint") and z.Part0 == chr.HumanoidRootPart then
                return z.Parent
            end
        end
    end
    return nil;
end

task.spawn(function()
    while true do
        for i,plr in ipairs(Players:GetPlayers()) do
            if plr.Character ~= nil then
                for _,v in ipairs(plr.Character:GetChildren()) do
                    if v:IsA("Highlight") and v.Name == "EnSeen" then
                        if not getgenv().rainbow_en then
                            v.FillColor = getgenv().En_Color;
                        end

                        if getgenv().rainbow_en == true then
                            v.FillColor = Color3.fromHSV(tick() % 5 / 5, 1,1);
                        end
                    end
                end
            end
        end
        wait(.15)
    end
end)

lp.CharacterAdded:Connect(function(char)
    print("Found Client Character")
    chr = char
end)

--// esp steup \\
